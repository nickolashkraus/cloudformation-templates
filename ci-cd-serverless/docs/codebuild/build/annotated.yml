# buildspec.yml for 'Build' stage
#
# Reference:
#   https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
#
# Required. Represents the build spec version. Amazon recommends that you use
# 0.2.
version: 0.2

# Optional. Available to Linux users only. Specifies a Linux user that runs
# commands in this build spec file. If run-as is not specified, then all
# commands run as root.
# run-as: root
# Optional. Represents information for one or more custom environment
# variables.
# env:
# Required if env is specified, and you want to define custom environment
# variables in plain text.
# variables:
#   key: 'value'
#   key: 'value'
# Required if env is specified, and you want to retrieve custom environment
# variables stored in Amazon EC2 Systems Manager Parameter Store.
# parameter-store:
#   key: 'value'
#   key: 'value'
# Optional. Used to indicate if CodeBuild uses its Git credential helper to
# provide Git credentials.
# git-credential-helper: yes
# Optional. Used to represent settings if you run your build in an explicit
# proxy server.
# proxy:
# Optional. Set to yes if you want your build in an explicit proxy server to
# upload artifacts. The default is no.
# upload-artifacts: yes
# Optional. Set to yes for your build in an explicit proxy server to create
# CloudWatch logs. The default is no.
# logs: yes
# Required. Represents the commands CodeBuild runs during each phase of the
# build.
#
# Note: In build spec version 0.1, CodeBuild runs each command in a separate
# instance of the default shell in the build environment. This means that each
# command runs in isolation from all other commands. Therefore, by default, you
# cannot run a single command that relies on the state of any previous commands
# (for example, changing directories or setting environment variables). To get
# around this limitation, we recommend that you use version 0.2, which solves
# this issue.
phases:
  # Optional. Represents the commands, if any, that CodeBuild runs during
  # installation.
  # install:
  # Optional. Use in a build phase to specify a Linux user that runs its
  # commands. If run-as is also specified globally for all commands at the
  # top of the build spec file, then the phase-level user takes precedence.
  # run-as: root
  # Required if using the Ubuntu standard image 2.0 or later, or the Amazon
  # Linux (AL2) standard image 1.0 or later. A runtime version is not
  # supported with a custom image or the Ubuntu standard image 1.0.
  # If you use the Ubuntu standard image 2.0 or later, or the Amazon Linux 2
  # (AL2) standard image 1.0 or later, you must specify runtime-versions in
  # your buildspec file.
  # runtime-versions:
  # runtime: version
  # runtime: version
  # Required sequence unless you specify runtime-versions.
  # commands:
  #   - command
  #   - command
  # Optional. Commands specified in a finally block are executed after
  # commands in the commands block. The commands in a finally block are
  # executed even if a command in the commands block fails.
  # finally:
  #   - command
  #   - command
  # Optional. Represents the commands, if any, that CodeBuild runs before the
  # build.
  # pre_build:
  # run-as: Linux-user-name
  # Required sequence if pre_build is specified.
  # commands:
  #   - command
  #   - command
  # finally:
  #   - command
  #   - command
  # Optional. Represents the commands, if any, that CodeBuild runs during the
  # build.
  build:
    # run-as: Linux-user-name
    # Required if build is specified.
    commands:
      - make test
    #   - command
    # finally:
    #   - command
    #   - command
  # Optional. Represents the commands, if any, that CodeBuild runs after the
  # build.
  post_build:
    # run-as: Linux-user-name
    # Required if post_build is specified.
    commands:
      - make package-lambda
    #   - command
    # finally:
    #   - command
    #   - command
# Optional. Represents information about where CodeBuild can find the build
# output and how CodeBuild prepares it for uploading to the Amazon S3 output
# bucket.
artifacts:
  # Required. Represents the locations that contain the build output artifacts
  # in the build environment.
  files:
    - lambda.zip
  #   - location
  # Optional. Specifies a name for your build artifact.
  name: BUILD_ARTIFACT
  # Optional. Represents whether paths to files in the build output artifact
  # are discarded.
  discard-paths: yes
  # Optional. Represents one or more top-level directories, relative to the
  # original build location, that CodeBuild uses to determine which files and
  # subdirectories to include in the build output artifact.
  # base-directory: location
  # Optional. Represents one or more artifact definitions as a mapping between
  # an artifact identifier and an artifact definition. Each artifact
  # identifiers in this block must match an artifact defined in the
  # secondaryArtifacts attribute of your project.
  # secondary-artifacts:
  #   artifactIdentifier:
  #     files:
  #       - location
  #       - location
  #     name: secondary-artifact-name
  #     discard-paths: yes
  #     base-directory: location
  #   artifactIdentifier:
  #     files:
  #       - location
  #       - location
  #     discard-paths: yes
  #     base-directory: location
# Optional. Represents information about where CodeBuild can prepare the files
# for uploading cache to an Amazon S3 cache bucket.
# This sequence is not required if the cache type of the project is `No Cache`.
# cache:
# Required. Represents the locations of the cache.
# paths:
#   - path
#   - path
